
{% if (enable_filter==1) %}
var g_dg{{n}}_filter = {};
{% endif %}
{% if (dg_inline==1) %}
var g_edit_index;
{% endif %}
{% if (group_col!='') %}
var g_dg{{n}}_expand=true;
{% endif %}
$(document).ready(function () {
    {% if (crud_r=="1")  %}
    $('#dg{{n}}_reload').bind('click', function () {
        load_dg{{n}}();
    });
    {% endif %}
    {% if (dg_inline==0) and (crud_c=="1")  %}
    $('#dg{{n}}_insert').bind('click', function () {
        dg{{n}}_edit_form('insert');
        {% if (form_full==1) %}
        $('#dg_edit').dialog('maximize');
        {% endif %}
        {{hide_id_ins|raw}}
    });
    {% endif %}
    $('#dg1_export').bind('click', function () {
        JSONToCSVConvertor($('#dg{{n}}').datagrid('getRows'), "{{T('dati')}}", 'label')
    });
    {% if (group_col!='') %}
    $('#dg{{n}}_expand').on('click', function () {
        if (g_dg{{n}}_expand) {
            g_dg{{n}}_expand = false;
            dg_collapse_expand('#dg{{n}}', 1);//espande
        } else {
            g_dg{{n}}_expand = true;
            dg_collapse_expand('#dg{{n}}', 0);//contrae
        }
    });
    {% endif %}
    {% if (enable_filter==1) %}
    $('#dg{{n}}_filter').bind('click', function () {
    dg{{n}}_filter_form();
    });
    {% endif %}
    function load_dg{{n}}() {
        //$('#tt').tabs('select', 'Tab{{n}}');
        $('#dg{{n}}').datagrid('uncheckAll');
        {% if (filter_base==1) %} 
        $('#dg{{n}}').datagrid('disableFilter');
        {% endif %} 
        $('#dg{{n}}').{{e}}datagrid({
            border: false,
            toolbar: '#tb{{n}}',
            {{title|raw}}
            url: '{{host_api}}{{api_url}}/SELECT',
            {% if (dg_inline==1) %}
            saveUrl: '{{host_api}}{{api_url}}/INSERT',
            updateUrl: '{{host_api}}{{api_url}}/UPDATE',
            {% endif %}
            destroyUrl: '{{host_api}}{{api_url}}/DELETE',
            method: 'post',
            {{row_num}}
            striped: true,
            fit: true,
            idField: '{{pk|raw}}', /** {{T('importante')}} **/
            singleSelect: true,
            checkOnSelect: false,
            selectOnCheck: false,
            remoteSort: false,
            multiSort: false,
            autoRowHeight: false, //For Speed refresh
            {{pagination|raw}}
            {% if (enable_filter==1) %}
            queryParams: {filter: g_dg{{n}}_filter},
            {% endif %}
            destroyMsg: {
                norecord: {// when no record is selected
                    title: "{{T('attenzione')}}",
                    msg: "{{T('Non Ã¨ stata selezionata nessuna riga'|raw)}}"
                },
                confirm: {// when select a row
                    title: "{{T('conferma')}}",
                    msg: "{{T('Sei sicuro di voler cancellare?')}}"
                }
            },
            onError: function (index, row) {
                $.messager.alert("{{T('errore')}}", row.msg, 'error');
                },
            {% if (dg_inline==1) %}
            onEdit: function (index, row) {
                g_edit_index = index;
            },
            {% endif %}
            {{on_after_edit|raw}}
            {% if (dg_inline==0) and (crud_u==1) %}
            onDblClickRow: function (index, row) {
                    dg{{n}}_edit_form('update');
                    {% if (form_full==1) %}
                    $('#dg_edit').dialog('maximize');
                    {% endif %}
            },
            {% endif %}
            {% if (ck_row_styler==1) %}
            rowStyler: function(index,row){
                {{row_styler|raw}}
            },
            {% endif %}
            {% if (group_col!='') %}
            view: groupview,
            groupField: '{{group_col}}',
            groupFormatter: function (value, rows) {
                return value + ' - ' + rows.length + ' {{T('elementi')}}';
            },
            {% endif %}
                {#
                columns: [[
                    {field: 'SEQ', title: 'Ord', width: '25px', editor: {type: 'numberbox', options: {required: true}}, sortable: true},
                    {field: 'DTIN', title: 'Data Inizio', width: 90, editor: {type: 'datebox', options: {formatter: myformatter_d_it, parser: myparser_d_it, required: true}}, sortable: true},
                    {field: 'DTFI', title: 'Data Fine', width: 90, editor: {type: 'datebox', options: {formatter: myformatter_d_it, parser: myparser_d_it, required: true}}, sortable: true},
                    {field: 'ID_CLONE', title: 'Fase<br>Duplicata', formatter: mycheck},
                ]],
                #}
                {{col_crud|raw}}
                });
        {% if (filter_base==1) %}        
        $('#dg{{n}}').datagrid('enableFilter');
        $('#dg{{n}}').datagrid('removeFilterRule');
        {% endif %}
        {% if (enable_filter==1) %}
        console.log('?&filter='+JSON.stringify(g_dg{{n}}_filter));
        {% endif %}
    }
    {% if (crud_u==1) or (crud_c==1) %}
    {{fn_dg_edit_form|raw}}
    {% endif %}
    {{fn_dg_filter_form|raw}}
    {% if (enable_filter==1) %}
    var filter = getURLParameter('filter');
    (filter != null) ? g_dg{{n}}_filter = JSON.parse(filter) : false;
    {% endif %}
    {% if (load_dg==1) %}
    load_dg{{n}}();
    {% endif %}
});
